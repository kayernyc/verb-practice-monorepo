# - name: Setup pnpm
#   uses: pnpm/action-setup@v2.2.4
#   with:
#     # Version of pnpm to install
#     version: "8.x"
#     # Where to store pnpm files
#     # dest: # optional, default is ~/setup-pnpm
#     # If specified, run `pnpm install`
#     run_install: # optional, default is null

name: build

on:
  pull_request:
    branches:
      - main

jobs:
  branch-info:
    runs-on: ubuntu-latest
    steps:
      - name: Get base branch name
        id: get-base-branch-name
        run: |
          if [[ "${{github.event.pull_request.base.ref}}" != "" ]]; then
            echo "::set-output name=branch::${{github.event.pull_request.base.ref}}"
          else
            echo "::set-output name=branch::main"
          fi
      - name: Get branch name
        id: get-branch-name
        uses: tj-actions/branch-names@v7.0.1

  get-affected:
    needs: [branch-info]
    runs-on: ubuntu-latest
    steps:
      # Check out the repository
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3.0.2
        with:
          main-branch-name: ${{needs.branch-info.outputs.base-branch-name}}
      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: '8.x'
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install

    outputs:
      base-branch-name: ${{ steps.get-base-branch-name.outputs.branch }}
      branch-name: ${{ steps.get-branch-name.outputs.branch }}
