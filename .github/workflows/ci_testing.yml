name: build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  branch-info:
    runs-on: ubuntu-latest
    steps:
      - name: Get base branch name
        id: get-base-branch-name
        run: |
          if [[ "${{ github.event.pull_request.base.ref }}" != "" ]]; then
            echo "branch=${{ github.event.pull_request.base.ref }}" >> $GITHUB_OUTPUT
          else
            echo "branch=main" >> $GITHUB_OUTPUT
          fi
      - name: Get branch name
        id: get-branch-name
        uses: tj-actions/branch-names@v7.0.1
    outputs:
      base-branch-name: ${{ steps.get-base-branch-name.outputs.branch }}
      branch-name: ${{ steps.get-base-branch-name.outputs.branch }}

  get-affected:
    needs: [branch-info]
    runs-on: ubuntu-latest
    steps:
      # Check out the repository
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3.0.2
        with:
          main-branch-name: ${{ needs.branch-info.outputs.base-branch-name }}
      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: '8.x'
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Get affected
        id: get-projects-arrays
        run: |
          if [[ "${{ github.event.pull_request.base.ref }}" == "" && "${{ needs.branch-info.outputs.branch-name }}" == "main" ]]; then
            echo "test-unit=$(node scripts/print-affected-array.js test:unit --all)" >> $GITHUB_OUTPUT
            echo "test-e2e=$(node scripts/print-affected-array.js test:e2e --all)" >> $GITHUB_OUTPUT
          else
            echo "test-unit=$(node scripts/print-affected-array.js test:unit origin/${{ needs.branch-info.outputs.base-branch-name }})" >> $GITHUB_OUTPUT
            echo "test-e2e=$(node scripts/print-affected-array.js test:e2e origin/${{ needs.branch-info.outputs.base-branch-name }})" >> $GITHUB_OUTPUT
          fi
    outputs:
      test-unit: ${{ steps.get-projects-arrays.outputs.test-unit }}
      test-e2e: ${{ steps.get-projects-arrays.outputs.test-e2e }}

  test-unit:
    runs-on: ubuntu-latest
    needs: [get-affected]
    # Skip the job if there are not affected projects containing unit tests
    if: ${{ fromJson(needs.get-affected.outputs.test-unit)[0] }}
    strategy:
      # Run in parallel
      max-parallel: 4
      # One job for each different project and node version
      matrix:
        node: ['18.0.0']
        projectName: ${{fromJson(needs.get-affected.outputs.test-unit)}}
    env:
      NODE: ${{ matrix.node }}
      APP_ROOT: ./dist
      DATA_PATH: data
    steps:
      - name: check the workflow
        uses: actions/checkout@v3
      - uses: ./.github/actions/set_up_testing_env
      - name: Get workspaces
        id: get-workspaces
        run: echo "::debug::${{ fromJson(needs.get-affected.outputs.test-unit)[0] }}"
      - name: Checkout and setup environment
        uses: actions/checkout@v3
      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: '8.x'
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      # Run test:unit script in the affected project
      - name: Test unit
        run: pnpm nx test:unit ${{ matrix.projectName }}

  test-e2e:
    runs-on: ubuntu-latest
    needs: [get-affected]
    # Skip the job if there are not affected projects containing unit tests
    if: ${{ fromJson(needs.get-affected.outputs.test-unit)[0] }}
    strategy:
      # Run in parallel
      max-parallel: 4
      # One job for each different project and node version
      matrix:
        node: ['18.0.0']
        projectName: ${{fromJson(needs.get-affected.outputs.test-unit)}}
    env:
      NODE: ${{ matrix.node }}
      APP_ROOT: ./dist
      DATA_PATH: data
    steps:
      - name: Get workspaces
        id: get-workspaces
        run: echo "::debug::${{ fromJson(needs.get-affected.outputs.test-unit)[0] }}"
      - name: Checkout and setup environment
        uses: actions/checkout@v3
      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: '8.x'
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      # Run test:unit script in the affected project
      - name: Test e2e
        run: pnpm nx test:e2e ${{ matrix.projectName }}

  test-workflow:
    runs-on: ubuntu-latest
    steps:
      - name: check the workflow
        uses: actions/checkout@v3
      - uses: ./.github/actions/set_up_testing_env
